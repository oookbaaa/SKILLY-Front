version: "3.8"

services:
  frontend:
    build:
      context: .
      target: development
    container_name: skill_exchange_frontend
    ports:
      - "5173:5173"
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=development
    restart: always
    depends_on:
      - prometheus

  # SonarQube service
  sonarqube:
    image: sonarqube:latest
    container_name: skill_exchange_sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: skill_exchange_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: skill_exchange_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  prometheus_data:
  grafana_data:
